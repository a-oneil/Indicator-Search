import requests
from ..utils import (
    failed_to_run,
    no_results_found,
)


def malware_bazzar(indicator):
    try:
        response = requests.post(
            "https://mb-api.abuse.ch/api/v1/",
            data={"query": "get_info", "hash": indicator.indicator},
        )

        if response.status_code != 200:
            return failed_to_run(
                tool_name="malware_bazzar",
                status_code=response.status_code,
                reason=response.reason,
            )

        if not response.json().get("query_status") == "ok":
            return no_results_found("malware_bazzar")

        return (
            # fmt: off
                {
                    "tool": "malware_bazzar",
                    "outcome": {"status": "results_found", "error_message": None, "status_code": response.status_code, "reason": response.reason},
                    "results": {
                        "file_type": response.json().get("data")[0].get("file_type"),
                        "signature": response.json().get("data")[0].get("signature"),
                        "file_name": response.json().get("data")[0].get("file_name"),
                        "delivery_method": response.json().get("delivery_method"),
                        "tags": response.json().get("tags"),
                    },
                },
            # fmt: on
        )
    except Exception as error_message:
        return failed_to_run(tool_name="malware_bazzar", error_message=error_message)
